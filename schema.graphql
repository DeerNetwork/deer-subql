type NftClass @entity {
  id: ID!
  owner: String! @index
  deposit: BigInt!
  permission: Int!
  metadata: NftMetadata
  metadataRaw: String
  totalTokens: BigInt!
  totalIssuance: BigInt!
  royaltyRate: Float!
}

type NftToken @entity {
  id: ID!
  class: NftClass! @index
  tokenId: Int!
  # creator: String!
  owners: [NftTokenOwner] @derivedFrom(field: "token")
  burns: [NftTokenBurn] @derivedFrom(field: "token")
  isBurned: Boolean!
  metadata: NftMetadata
  metadataRaw: String
  deposit: BigInt!
  quantity: BigInt!
  consumers: Int!
  royaltyRate: Float!
  royaltyBeneficiary: String!
}

type NftMetadata @jsonField {
  name: String
}

type NftTokenOwner @entity {
  id: ID!
  token: NftToken! @index
  who: String! @index
  free: BigInt!
  reserved: BigInt!
}

type NftTokenBurn @entity {
  id: ID!
  token: NftToken! @index
  who: String! @index
  quantity: BigInt!
}

type NftTokenTransfer @entity {
  id: ID!
  token: NftToken! @index
  from: String! @index
  to: String! @index
  quantity: BigInt!
}

type NftAuction @entity {
  id: ID!
  auctionId: Int!
  currentBid: NftAuctionBid
  owner: String!
  token: NftToken! @index
  quantity: BigInt!
  dutch: DutchAuctionDetail
  english: EnglishAuctionDetail
  deposit: BigInt!
  createdAt: Int!
  openAt: Int!
  deadline: Int!
}

type DutchAuctionDetail @jsonField {
  mixPrice: BigInt!
  maxPrice: BigInt!
}

type EnglishAuctionDetail @jsonField {
  initPrice: BigInt!
  minRaisePrice: BigInt!
}

type NftAuctionBid @entity {
  id: ID!
  token: NftToken! @index
  price: BigInt!
  bidAt: Int!
}

type NftOrder @entity {
  id: ID!
  orderId: Int!
  token: NftToken! @index
  quantity: BigInt!
  price: BigInt!
  deposit: BigInt!
  deadline: Int
}

type NftOffer @entity {
  id: ID!
  offerId: Int!
  token: NftToken! @index
  quantity: BigInt!
  price: BigInt!
  deposit: BigInt!
  deadline: Int
}
